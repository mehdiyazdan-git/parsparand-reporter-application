CREATE TABLE _user
(
    id        INTEGER NOT NULL,
    email     VARCHAR(255),
    enabled   BOOLEAN NOT NULL,
    firstname VARCHAR(255),
    lastname  VARCHAR(255),
    password  VARCHAR(255),
    role      VARCHAR(255),
    username  VARCHAR(255),
    CONSTRAINT pk__user PRIMARY KEY (id)
);

CREATE TABLE addendum
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    addendum_number VARCHAR(255),
    end_date        date,
    quantity        BIGINT,
    start_date      date,
    unit_price      BIGINT,
    contract_id     BIGINT,
    year_id         BIGINT,
    CONSTRAINT pk_addendum PRIMARY KEY (id)
);

CREATE TABLE adjustment
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    adjustment_type   INTEGER,
    description       VARCHAR(255),
    quantity          INTEGER,
    unit_price        DOUBLE PRECISION,
    invoice_id        BIGINT,
    adjustment_date   date,
    adjustment_number BIGINT,
    year_id           BIGINT,
    jalali_year       INTEGER,
    month             INTEGER,
    CONSTRAINT pk_adjustment PRIMARY KEY (id)
);

CREATE TABLE app_setting
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    vat DOUBLE PRECISION,
    CONSTRAINT pk_app_setting PRIMARY KEY (id)
);

CREATE TABLE company_reportdto
(
    id                        BIGINT NOT NULL,
    avg_unit_price            BIGINT,
    cumulative_total_amount   BIGINT,
    cumulative_total_quantity BIGINT,
    customer_name             VARCHAR(255),
    total_amount              BIGINT,
    total_quantity            BIGINT,
    CONSTRAINT pk_company_reportdto PRIMARY KEY (id)
);

CREATE TABLE contract_item
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity    BIGINT,
    unit_price  BIGINT,
    contract_id BIGINT,
    product_id  BIGINT,
    CONSTRAINT pk_contract_item PRIMARY KEY (id)
);

CREATE TABLE contracts
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    contract_description VARCHAR(255),
    contract_number      VARCHAR(255),
    end_date             date,
    start_date           date,
    customer_id          BIGINT,
    year_id              BIGINT,
    advance_payment      DOUBLE PRECISION,
    insurance_deposit    DOUBLE PRECISION,
    performance_bond     DOUBLE PRECISION,
    CONSTRAINT pk_contracts PRIMARY KEY (id)
);

CREATE TABLE customer
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    big_customer  BOOLEAN,
    customer_code VARCHAR(255),
    economic_code VARCHAR(255),
    name          VARCHAR(255),
    national_code VARCHAR(255),
    phone         VARCHAR(255),
    CONSTRAINT pk_customer PRIMARY KEY (id)
);

CREATE TABLE establishment
(
    id                       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    claims                   DOUBLE PRECISION,
    customer_id              BIGINT,
    perior_insurance_deposit DOUBLE PRECISION,
    perior_performance_bound DOUBLE PRECISION,
    CONSTRAINT pk_establishment PRIMARY KEY (id)
);

CREATE TABLE invoice
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    due_date          date,
    invoice_number    BIGINT,
    issued_date       date,
    sales_type        VARCHAR(20),
    customer_id       BIGINT,
    contract_id       BIGINT,
    invoice_status_id INTEGER,
    year_id           BIGINT,
    advanced_payment  BIGINT,
    insurance_deposit BIGINT,
    performance_bound BIGINT,
    jalali_year       INTEGER,
    month             INTEGER,
    CONSTRAINT pk_invoice PRIMARY KEY (id)
);

CREATE TABLE invoice_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity             INTEGER,
    unit_price           BIGINT,
    invoice_id           BIGINT,
    product_id           BIGINT,
    warehouse_receipt_id BIGINT,
    CONSTRAINT pk_invoice_item PRIMARY KEY (id)
);

CREATE TABLE invoice_status
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_invoice_status PRIMARY KEY (id)
);

CREATE TABLE payment
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    payment_date        date,
    payment_description VARCHAR(255),
    customer_id         BIGINT,
    year_id             BIGINT,
    payment_amount      DOUBLE PRECISION,
    payment_subject     INTEGER,
    jalali_year         INTEGER,
    month               INTEGER,
    CONSTRAINT pk_payment PRIMARY KEY (id)
);
CREATE TABLE customer
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    big_customer  BOOLEAN,
    customer_code VARCHAR(255),
    economic_code VARCHAR(255),
    name          VARCHAR(255),
    national_code VARCHAR(255),
    phone         VARCHAR(255),
    CONSTRAINT pk_customer PRIMARY KEY (id)
);


CREATE TABLE report
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    report_date        date,
    report_explanation VARCHAR(255),
    jalali_year        INTEGER,
    month              INTEGER,
    year_id            BIGINT,
    CONSTRAINT pk_report PRIMARY KEY (id)
);

CREATE TABLE report_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity             BIGINT,
    unit_price           DOUBLE PRECISION,
    customer_id          BIGINT,
    report_id            BIGINT,
    warehouse_receipt_id BIGINT,
    CONSTRAINT pk_report_item PRIMARY KEY (id)
);



CREATE TABLE warehouse_receipt
(
    id                            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    warehouse_receipt_date        date,
    warehouse_receipt_description VARCHAR(255),
    warehouse_receipt_number      BIGINT,
    customer_id                   BIGINT,
    year_id                       BIGINT,
    jalali_year                   INTEGER,
    month                         INTEGER,
    CONSTRAINT pk_warehouse_receipt PRIMARY KEY (id)
);
CREATE TABLE warehouse_receipt_item
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity             INTEGER,
    unit_price           BIGINT,
    product_id           BIGINT,
    warehouse_receipt_id BIGINT,
    CONSTRAINT pk_warehouse_receipt_item PRIMARY KEY (id)
);
CREATE TABLE product
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    measurement_index VARCHAR(255),
    product_code      VARCHAR(255),
    product_name      VARCHAR(255),
    product_type      INTEGER,
    CONSTRAINT pk_product PRIMARY KEY (id)
);

CREATE TABLE year
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name BIGINT,
    CONSTRAINT pk_year PRIMARY KEY (id)
);

CREATE TABLE returned
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quantity             BIGINT,
    returned_date        date,
    returned_description VARCHAR(255),
    returned_number      BIGINT,
    unit_price           DOUBLE PRECISION,
    customer_id          BIGINT,
    jalali_year          INTEGER,
    month                INTEGER,
    year_id              BIGINT,
    CONSTRAINT pk_returned PRIMARY KEY (id)
);

CREATE TABLE token
(
    id         INTEGER NOT NULL,
    expired    BOOLEAN NOT NULL,
    revoked    BOOLEAN NOT NULL,
    token      VARCHAR(255),
    token_type VARCHAR(255),
    user_id    INTEGER,
    CONSTRAINT pk_token PRIMARY KEY (id)
);
CREATE TABLE warehouse_invoice
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    receipt_id BIGINT,
    invoice_id BIGINT,
    CONSTRAINT pk_warehouse_invoice PRIMARY KEY (id)
);





ALTER TABLE addendum
    ADD CONSTRAINT FK_ADDENDUM_ON_CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE addendum
    ADD CONSTRAINT FK_ADDENDUM_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE adjustment
    ADD CONSTRAINT FK_ADJUSTMENT_ON_INVOICE FOREIGN KEY (invoice_id) REFERENCES invoice (id);

ALTER TABLE adjustment
    ADD CONSTRAINT FK_ADJUSTMENT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE contracts
    ADD CONSTRAINT FK_CONTRACTS_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE contracts
    ADD CONSTRAINT FK_CONTRACTS_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE contract_item
    ADD CONSTRAINT FK_CONTRACT_ITEM_ON_CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE contract_item
    ADD CONSTRAINT FK_CONTRACT_ITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE establishment
    ADD CONSTRAINT FK_ESTABLISHMENT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM_ON_INVOICE FOREIGN KEY (invoice_id) REFERENCES invoice (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE invoice_item
    ADD CONSTRAINT FK_INVOICE_ITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_CONTRACT FOREIGN KEY (contract_id) REFERENCES contracts (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_INVOICE_STATUS FOREIGN KEY (invoice_status_id) REFERENCES invoice_status (id);

ALTER TABLE invoice
    ADD CONSTRAINT FK_INVOICE_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE payment
    ADD CONSTRAINT FK_PAYMENT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE payment
    ADD CONSTRAINT FK_PAYMENT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM_ON_REPORT FOREIGN KEY (report_id) REFERENCES report (id);

ALTER TABLE report_item
    ADD CONSTRAINT FK_REPORT_ITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE report
    ADD CONSTRAINT FK_REPORT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE returned
    ADD CONSTRAINT FK_RETURNED_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE returned
    ADD CONSTRAINT FK_RETURNED_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);

ALTER TABLE token
    ADD CONSTRAINT FK_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES _user (id);

ALTER TABLE warehouse_receipt_item
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ITEM_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES product (id);

ALTER TABLE warehouse_receipt_item
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ITEM_ON_WAREHOUSE_RECEIPT FOREIGN KEY (warehouse_receipt_id) REFERENCES warehouse_receipt (id);

ALTER TABLE warehouse_receipt
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ON_CUSTOMER FOREIGN KEY (customer_id) REFERENCES customer (id);

ALTER TABLE warehouse_receipt
    ADD CONSTRAINT FK_WAREHOUSE_RECEIPT_ON_YEAR FOREIGN KEY (year_id) REFERENCES year (id);